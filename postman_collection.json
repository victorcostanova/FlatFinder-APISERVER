{
  "info": {
    "name": "FlatFinder API",
    "description": "Collection for testing FlatFinder REST API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "flatId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      }
    },
    {
      "name": "User Registration",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('authToken', response.token);",
              "    pm.collectionVariables.set('userId', response.user._id);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"birthDate\": \"1990-01-01\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users/register",
          "host": ["{{baseUrl}}"],
          "path": ["users", "register"]
        }
      }
    },
    {
      "name": "User Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('authToken', response.token);",
              "    pm.collectionVariables.set('userId', response.user._id);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users/login",
          "host": ["{{baseUrl}}"],
          "path": ["users", "login"]
        }
      }
    },
    {
      "name": "Get All Users (Admin)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/users",
          "host": ["{{baseUrl}}"],
          "path": ["users"]
        }
      }
    },
    {
      "name": "Get User By ID",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/users/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{userId}}"]
        }
      }
    },
    {
      "name": "Update User",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"firstName\": \"Updated John\",\n  \"lastName\": \"Updated Doe\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{userId}}"]
        }
      }
    },
    {
      "name": "Get All Flats",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/flats",
          "host": ["{{baseUrl}}"],
          "path": ["flats"]
        }
      }
    },
    {
      "name": "Add Flat",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('flatId', response._id);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"city\": \"Tel Aviv\",\n  \"streetName\": \"Dizengoff\",\n  \"streetNumber\": \"123\",\n  \"areaSize\": 85,\n  \"hasAc\": true,\n  \"yearBuilt\": 2020,\n  \"rentPrice\": 5000,\n  \"dateAvailable\": \"2024-01-01\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/flats",
          "host": ["{{baseUrl}}"],
          "path": ["flats"]
        }
      }
    },
    {
      "name": "Get Flat By ID",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/flats/{{flatId}}",
          "host": ["{{baseUrl}}"],
          "path": ["flats", "{{flatId}}"]
        }
      }
    },
    {
      "name": "Update Flat",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"rentPrice\": 5500,\n  \"hasAc\": true\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/flats/{{flatId}}",
          "host": ["{{baseUrl}}"],
          "path": ["flats", "{{flatId}}"]
        }
      }
    },
    {
      "name": "Delete Flat",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/flats/{{flatId}}",
          "host": ["{{baseUrl}}"],
          "path": ["flats", "{{flatId}}"]
        }
      }
    },
    {
      "name": "Add Message to Flat",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"content\": \"Hi, I am interested in this flat. Is it still available?\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/flats/{{flatId}}/messages",
          "host": ["{{baseUrl}}"],
          "path": ["flats", "{{flatId}}", "messages"]
        }
      }
    },
    {
      "name": "Get All Messages for Flat (Owner)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/flats/{{flatId}}/messages",
          "host": ["{{baseUrl}}"],
          "path": ["flats", "{{flatId}}", "messages"]
        }
      }
    },
    {
      "name": "Get User Messages for Flat",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/flats/{{flatId}}/messages/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["flats", "{{flatId}}", "messages", "{{userId}}"]
        }
      }
    }
  ]
}
